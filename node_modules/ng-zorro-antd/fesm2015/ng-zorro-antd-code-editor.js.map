{"version":3,"file":"ng-zorro-antd-code-editor.js","sources":["ng://ng-zorro-antd/code-editor/nz-code-editor.definitions.ts","ng://ng-zorro-antd/code-editor/nz-code-editor.service.ts","ng://ng-zorro-antd/code-editor/nz-code-editor.component.ts","ng://ng-zorro-antd/code-editor/nz-code-editor.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { SafeUrl } from '@angular/platform-browser';\n\nimport { InjectionToken } from '@angular/core';\n\nexport type NzEditorMode = 'normal' | 'diff';\n\n// tslint:disable-next-line no-any\nexport type JoinedEditorOption = any;\n\nexport enum NzCodeEditorLoadingStatus {\n  UNLOAD = 'unload',\n  LOADING = 'loading',\n  LOADED = 'LOADED'\n}\n\nexport interface NzCodeEditorConfig {\n  assetsRoot?: string | SafeUrl;\n  defaultEditorOption?: JoinedEditorOption;\n\n  onLoad?(): void;\n\n  onFirstEditorInit?(): void;\n\n  onInit?(): void;\n}\n\nexport const NZ_CODE_EDITOR_CONFIG = new InjectionToken<NzCodeEditorConfig>('nz-code-editor-config', {\n  providedIn: 'root',\n  factory: NZ_CODE_EDITOR_CONFIG_FACTORY\n});\n\nexport function NZ_CODE_EDITOR_CONFIG_FACTORY(): NzCodeEditorConfig {\n  return {};\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { of as observableOf, BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { PREFIX } from 'ng-zorro-antd/core';\nimport {\n  JoinedEditorOption,\n  NzCodeEditorConfig,\n  NzCodeEditorLoadingStatus,\n  NZ_CODE_EDITOR_CONFIG\n} from './nz-code-editor.definitions';\n\n// tslint:disable-next-line no-any\ndeclare const monaco: any;\n\n// tslint:disable no-any\nfunction tryTriggerFunc(fn?: (...args: any[]) => any): (...args: any) => void {\n  return (...args: any[]) => {\n    if (fn) {\n      fn(...args);\n    }\n  };\n}\n// tslint:enable no-any\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzCodeEditorService {\n  private document: Document;\n  private firstEditorInitialized = false;\n  private loaded$ = new Subject<boolean>();\n  private loadingStatus = NzCodeEditorLoadingStatus.UNLOAD;\n  private option: JoinedEditorOption;\n\n  option$ = new BehaviorSubject<JoinedEditorOption>(this.option);\n\n  constructor(\n    @Inject(NZ_CODE_EDITOR_CONFIG) private config: NzCodeEditorConfig,\n    @Inject(DOCUMENT) _document: any // tslint:disable-line no-any\n  ) {\n    this.document = _document;\n    this.option = this.config.defaultEditorOption || {};\n  }\n\n  // TODO: use config service later.\n  updateDefaultOption(option: JoinedEditorOption): void {\n    this.option = { ...this.option, ...option };\n    this.option$.next(this.option);\n\n    if (option.theme) {\n      monaco.editor.setTheme(option.theme);\n    }\n  }\n\n  requestToInit(): Observable<JoinedEditorOption> {\n    if (this.loadingStatus === NzCodeEditorLoadingStatus.LOADED) {\n      this.onInit();\n      return observableOf(this.getLatestOption());\n    }\n\n    if (this.loadingStatus === NzCodeEditorLoadingStatus.UNLOAD) {\n      this.loadMonacoScript();\n    }\n\n    return this.loaded$.asObservable().pipe(\n      tap(() => this.onInit()),\n      map(() => this.getLatestOption())\n    );\n  }\n\n  private loadMonacoScript(): void {\n    if (this.loadingStatus === NzCodeEditorLoadingStatus.LOADING) {\n      return;\n    }\n\n    this.loadingStatus = NzCodeEditorLoadingStatus.LOADING;\n\n    const assetsRoot = this.config.assetsRoot;\n    const vs = assetsRoot ? `${assetsRoot}/vs` : 'assets/vs';\n    const windowAsAny = window as any; // tslint:disable-line no-any\n    const loadScript = this.document.createElement('script');\n\n    loadScript.type = 'text/javascript';\n    loadScript.src = `${vs}/loader.js`;\n    loadScript.onload = () => {\n      windowAsAny.require.config({\n        paths: { vs }\n      });\n      windowAsAny.require(['vs/editor/editor.main'], () => {\n        this.loadingStatus = NzCodeEditorLoadingStatus.LOADED;\n        this.loaded$.next(true);\n        this.loaded$.complete();\n        this.onLoad();\n      });\n    };\n    loadScript.onerror = () => {\n      throw new Error(`${PREFIX} cannot load assets of monaco editor from source \"${vs}\".`);\n    };\n\n    this.document.documentElement.appendChild(loadScript);\n  }\n\n  private onInit(): void {\n    if (!this.firstEditorInitialized) {\n      this.firstEditorInitialized = true;\n      tryTriggerFunc(this.config.onFirstEditorInit)();\n    }\n\n    tryTriggerFunc(this.config.onInit)();\n  }\n\n  private onLoad(): void {\n    tryTriggerFunc(this.config.onLoad)();\n  }\n\n  private getLatestOption(): JoinedEditorOption {\n    return { ...this.option };\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  forwardRef,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { combineLatest, fromEvent, BehaviorSubject, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { inNextTick, warn, InputBoolean } from 'ng-zorro-antd/core';\n\nimport { JoinedEditorOption, NzEditorMode } from './nz-code-editor.definitions';\nimport { NzCodeEditorService } from './nz-code-editor.service';\n\n// Import types from monaco editor.\nimport { editor } from 'monaco-editor';\nimport IEditor = editor.IEditor;\nimport IDiffEditor = editor.IDiffEditor;\nimport ITextModel = editor.ITextModel;\nimport IEditorConstructionOptions = editor.IEditorConstructionOptions;\nimport IDiffEditorConstructionOptions = editor.IDiffEditorConstructionOptions;\n\n// tslint:disable-next-line no-any\ndeclare const monaco: any;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-code-editor',\n  exportAs: 'nzCodeEditor',\n  templateUrl: './nz-code-editor.component.html',\n  host: {\n    '[class.ant-code-editor]': 'true'\n  },\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCodeEditorComponent),\n      multi: true\n    }\n  ]\n})\nexport class NzCodeEditorComponent implements OnDestroy, AfterViewInit {\n  @Input() nzEditorMode: NzEditorMode = 'normal';\n  @Input() nzOriginalText = '';\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() @InputBoolean() nzFullControl = false;\n  @Input() nzToolkit: TemplateRef<void>;\n\n  @Input() set nzEditorOption(value: JoinedEditorOption) {\n    this.editorOption$.next(value);\n  }\n\n  @Output() readonly nzEditorInitialized = new EventEmitter<IEditor | IDiffEditor>();\n\n  editorOptionCached: JoinedEditorOption = {};\n\n  private readonly el: HTMLElement;\n  private destroy$ = new Subject<void>();\n  private resize$ = new Subject<void>();\n  private editorOption$ = new BehaviorSubject<JoinedEditorOption>({});\n  private editorInstance: IEditor | IDiffEditor;\n  private value = '';\n  private modelSet = false;\n\n  constructor(private nzCodeEditorService: NzCodeEditorService, private ngZone: NgZone, elementRef: ElementRef) {\n    this.el = elementRef.nativeElement;\n  }\n\n  /**\n   * Initialize a monaco editor instance.\n   */\n  ngAfterViewInit(): void {\n    this.nzCodeEditorService.requestToInit().subscribe(option => this.setup(option));\n  }\n\n  ngOnDestroy(): void {\n    if (this.editorInstance) {\n      this.editorInstance.dispose();\n    }\n\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value: string): void {\n    this.value = value;\n    this.setValue();\n  }\n\n  // tslint:disable-next-line no-any\n  registerOnChange(fn: (value: string) => void): any {\n    this.onChange = fn;\n  }\n\n  // tslint:disable-next-line no-any\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  onChange(_value: string): void {}\n\n  onTouch(): void {}\n\n  layout(): void {\n    this.resize$.next();\n  }\n\n  private setup(option: JoinedEditorOption): void {\n    inNextTick().subscribe(() => {\n      this.editorOptionCached = option;\n      this.registerOptionChanges();\n      this.initMonacoEditorInstance();\n      this.registerResizeChange();\n      this.setValue();\n\n      if (!this.nzFullControl) {\n        this.setValueEmitter();\n      }\n\n      this.nzEditorInitialized.next(this.editorInstance);\n    });\n  }\n\n  private registerOptionChanges(): void {\n    combineLatest([this.editorOption$, this.nzCodeEditorService.option$])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([selfOpt, defaultOpt]) => {\n        this.editorOptionCached = {\n          ...this.editorOptionCached,\n          ...defaultOpt,\n          ...selfOpt\n        };\n        this.updateOptionToMonaco();\n      });\n  }\n\n  private initMonacoEditorInstance(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.editorInstance =\n        this.nzEditorMode === 'normal'\n          ? monaco.editor.create(this.el, { ...this.editorOptionCached })\n          : monaco.editor.createDiffEditor(this.el, {\n              ...(this.editorOptionCached as IDiffEditorConstructionOptions)\n            });\n    });\n  }\n\n  private registerResizeChange(): void {\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(window, 'resize')\n        .pipe(\n          debounceTime(300),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => {\n          this.layout();\n        });\n\n      this.resize$\n        .pipe(\n          takeUntil(this.destroy$),\n          filter(() => !!this.editorInstance),\n          map(() => ({\n            width: this.el.clientWidth,\n            height: this.el.clientHeight\n          })),\n          distinctUntilChanged((a, b) => a.width === b.width && a.height === b.height),\n          debounceTime(50)\n        )\n        .subscribe(() => {\n          this.editorInstance.layout();\n        });\n    });\n  }\n\n  private setValue(): void {\n    if (!this.editorInstance) {\n      return;\n    }\n\n    if (this.nzFullControl && this.value) {\n      warn(`should not set value when you are using full control mode! It would result in ambiguous data flow!`);\n      return;\n    }\n\n    if (this.nzEditorMode === 'normal') {\n      if (this.modelSet) {\n        (this.editorInstance.getModel() as ITextModel).setValue(this.value);\n      } else {\n        (this.editorInstance as IEditor).setModel(\n          monaco.editor.createModel(this.value, (this.editorOptionCached as IEditorConstructionOptions).language)\n        );\n        this.modelSet = true;\n      }\n    } else {\n      if (this.modelSet) {\n        const model = (this.editorInstance as IDiffEditor).getModel()!;\n        model.modified.setValue(this.value);\n        model.original.setValue(this.nzOriginalText);\n      } else {\n        const language = (this.editorOptionCached as IEditorConstructionOptions).language;\n        (this.editorInstance as IDiffEditor).setModel({\n          original: monaco.editor.createModel(this.value, language),\n          modified: monaco.editor.createModel(this.nzOriginalText, language)\n        });\n      }\n    }\n  }\n\n  private setValueEmitter(): void {\n    const model = (this.nzEditorMode === 'normal'\n      ? (this.editorInstance as IEditor).getModel()\n      : (this.editorInstance as IDiffEditor).getModel()!.modified) as ITextModel;\n\n    model.onDidChangeContent(() => {\n      this.emitValue(model.getValue());\n    });\n  }\n\n  private emitValue(value: string): void {\n    this.value = value;\n    this.onChange(value);\n  }\n\n  private updateOptionToMonaco(): void {\n    if (this.editorInstance) {\n      this.editorInstance.updateOptions({ ...this.editorOptionCached });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\n\nimport { NzCodeEditorComponent } from './nz-code-editor.component';\n\n@NgModule({\n  declarations: [NzCodeEditorComponent],\n  imports: [CommonModule, NzIconModule, NzSpinModule],\n  exports: [NzCodeEditorComponent]\n})\nexport class NzCodeEditorModule {}\n"],"names":["observableOf","tslib_1.__decorate"],"mappings":";;;;;;;;;;;;;;;;IAkBE,QAAS,QAAQ;IACjB,SAAU,SAAS;IACnB,QAAS,QAAQ;;;;;AAGnB,iCASC;;;IARC,wCAA8B;;IAC9B,iDAAyC;;;;IAEzC,sDAAgB;;;;IAEhB,iEAA2B;;;;IAE3B,sDAAgB;;;AAGlB,MAAa,qBAAqB,GAAG,IAAI,cAAc,CAAqB,uBAAuB,EAAE;IACnG,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,6BAA6B;CACvC,CAAC;;;;AAEF,SAAgB,6BAA6B;IAC3C,OAAO,EAAE,CAAC;CACX;;;;;;;;;;;AChBD,SAAS,cAAc,CAAC,EAA4B;IAClD;;;;IAAO,CAAC,GAAG,IAAW;QACpB,IAAI,EAAE,EAAE;YACN,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;SACb;KACF,EAAC;CACH;;AAMD,MAAa,mBAAmB;;;;;IAS9B,YACyC,MAA0B,EAC/C,SAAc;;QADO,WAAM,GAAN,MAAM,CAAoB;QAR3D,2BAAsB,GAAG,KAAK,CAAC;QAC/B,YAAO,GAAG,IAAI,OAAO,EAAW,CAAC;QACjC,kBAAa,GAAG,yBAAyB,CAAC,MAAM,CAAC;QAGzD,YAAO,GAAG,IAAI,eAAe,CAAqB,IAAI,CAAC,MAAM,CAAC,CAAC;QAM7D,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB,IAAI,EAAE,CAAC;KACrD;;;;;;IAGD,mBAAmB,CAAC,MAA0B;QAC5C,IAAI,CAAC,MAAM,qBAAQ,IAAI,CAAC,MAAM,EAAK,MAAM,CAAE,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE/B,IAAI,MAAM,CAAC,KAAK,EAAE;YAChB,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACtC;KACF;;;;IAED,aAAa;QACX,IAAI,IAAI,CAAC,aAAa,KAAK,yBAAyB,CAAC,MAAM,EAAE;YAC3D,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,OAAOA,EAAY,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;SAC7C;QAED,IAAI,IAAI,CAAC,aAAa,KAAK,yBAAyB,CAAC,MAAM,EAAE;YAC3D,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CACrC,GAAG;;;QAAC,MAAM,IAAI,CAAC,MAAM,EAAE,EAAC,EACxB,GAAG;;;QAAC,MAAM,IAAI,CAAC,eAAe,EAAE,EAAC,CAClC,CAAC;KACH;;;;;IAEO,gBAAgB;QACtB,IAAI,IAAI,CAAC,aAAa,KAAK,yBAAyB,CAAC,OAAO,EAAE;YAC5D,OAAO;SACR;QAED,IAAI,CAAC,aAAa,GAAG,yBAAyB,CAAC,OAAO,CAAC;;cAEjD,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU;;cACnC,EAAE,GAAG,UAAU,GAAG,GAAG,UAAU,KAAK,GAAG,WAAW;;cAClD,WAAW,sBAAG,MAAM,EAAO;;;cAC3B,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;QAExD,UAAU,CAAC,IAAI,GAAG,iBAAiB,CAAC;QACpC,UAAU,CAAC,GAAG,GAAG,GAAG,EAAE,YAAY,CAAC;QACnC,UAAU,CAAC,MAAM;;;QAAG;YAClB,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;gBACzB,KAAK,EAAE,EAAE,EAAE,EAAE;aACd,CAAC,CAAC;YACH,WAAW,CAAC,OAAO,CAAC,CAAC,uBAAuB,CAAC;;;YAAE;gBAC7C,IAAI,CAAC,aAAa,GAAG,yBAAyB,CAAC,MAAM,CAAC;gBACtD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBACxB,IAAI,CAAC,MAAM,EAAE,CAAC;aACf,EAAC,CAAC;SACJ,CAAA,CAAC;QACF,UAAU,CAAC,OAAO;;;QAAG;YACnB,MAAM,IAAI,KAAK,CAAC,GAAG,MAAM,qDAAqD,EAAE,IAAI,CAAC,CAAC;SACvF,CAAA,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;KACvD;;;;;IAEO,MAAM;QACZ,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;YAChC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;YACnC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC;SACjD;QAED,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;KACtC;;;;;IAEO,MAAM;QACZ,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;KACtC;;;;;IAEO,eAAe;QACrB,yBAAY,IAAI,CAAC,MAAM,EAAG;KAC3B;;;YA7FF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;4CAWI,MAAM,SAAC,qBAAqB;4CAC5B,MAAM,SAAC,QAAQ;;;;;;;;IAVlB,uCAA2B;;;;;IAC3B,qDAAuC;;;;;IACvC,sCAAyC;;;;;IACzC,4CAAyD;;;;;IACzD,qCAAmC;;IAEnC,sCAA+D;;;;;IAG7D,qCAAiE;;;;;;;MCYxD,qBAAqB;;;;;;IAuBhC,YAAoB,mBAAwC,EAAU,MAAc,EAAE,UAAsB;QAAxF,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAtB3E,iBAAY,GAAiB,QAAQ,CAAC;QACtC,mBAAc,GAAG,EAAE,CAAC;QACJ,cAAS,GAAG,KAAK,CAAC;QAClB,kBAAa,GAAG,KAAK,CAAC;QAO5B,wBAAmB,GAAG,IAAI,YAAY,EAAyB,CAAC;QAEnF,uBAAkB,GAAuB,EAAE,CAAC;QAGpC,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;QAC/B,YAAO,GAAG,IAAI,OAAO,EAAQ,CAAC;QAC9B,kBAAa,GAAG,IAAI,eAAe,CAAqB,EAAE,CAAC,CAAC;QAE5D,UAAK,GAAG,EAAE,CAAC;QACX,aAAQ,GAAG,KAAK,CAAC;QAGvB,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,aAAa,CAAC;KACpC;;;;;IAlBD,IAAa,cAAc,CAAC,KAAyB;QACnD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;;;;;IAqBD,eAAe;QACb,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,CAAC,SAAS;;;;QAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAC,CAAC;KAClF;;;;IAED,WAAW;QACT,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;SAC/B;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B;;;;;IAED,UAAU,CAAC,KAAa;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;;;;;;IAGD,gBAAgB,CAAC,EAA2B;QAC1C,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;;;;;;IAGD,iBAAiB,CAAC,EAAO;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACnB;;;;;IAED,QAAQ,CAAC,MAAc,KAAU;;;;IAEjC,OAAO,MAAW;;;;IAElB,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;KACrB;;;;;;IAEO,KAAK,CAAC,MAA0B;QACtC,UAAU,EAAE,CAAC,SAAS;;;QAAC;YACrB,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;YACjC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAChC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;gBACvB,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;YAED,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACpD,EAAC,CAAC;KACJ;;;;;IAEO,qBAAqB;QAC3B,aAAa,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;aAClE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS;;;;QAAC,CAAC,CAAC,OAAO,EAAE,UAAU,CAAC;YAC/B,IAAI,CAAC,kBAAkB,qBAClB,IAAI,CAAC,kBAAkB,EACvB,UAAU,EACV,OAAO,CACX,CAAC;YACF,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B,EAAC,CAAC;KACN;;;;;IAEO,wBAAwB;QAC9B,IAAI,CAAC,MAAM,CAAC,iBAAiB;;;QAAC;YAC5B,IAAI,CAAC,cAAc;gBACjB,IAAI,CAAC,YAAY,KAAK,QAAQ;sBAC1B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,oBAAO,IAAI,CAAC,kBAAkB,EAAG;sBAC7D,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,wCAChC,IAAI,CAAC,kBAAkB,KAC3B,CAAC;SACV,EAAC,CAAC;KACJ;;;;;IAEO,oBAAoB;QAC1B,IAAI,CAAC,MAAM,CAAC,iBAAiB;;;QAAC;YAC5B,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC;iBACxB,IAAI,CACH,YAAY,CAAC,GAAG,CAAC,EACjB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACzB;iBACA,SAAS;;;YAAC;gBACT,IAAI,CAAC,MAAM,EAAE,CAAC;aACf,EAAC,CAAC;YAEL,IAAI,CAAC,OAAO;iBACT,IAAI,CACH,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EACxB,MAAM;;;YAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,EAAC,EACnC,GAAG;;;YAAC,OAAO;gBACT,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,WAAW;gBAC1B,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,YAAY;aAC7B,CAAC,EAAC,EACH,oBAAoB;;;;;YAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAC,EAC5E,YAAY,CAAC,EAAE,CAAC,CACjB;iBACA,SAAS;;;YAAC;gBACT,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;aAC9B,EAAC,CAAC;SACN,EAAC,CAAC;KACJ;;;;;IAEO,QAAQ;QACd,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,OAAO;SACR;QAED,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,KAAK,EAAE;YACpC,IAAI,CAAC,oGAAoG,CAAC,CAAC;YAC3G,OAAO;SACR;QAED,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;YAClC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,oBAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAgB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrE;iBAAM;gBACL,oBAAC,IAAI,CAAC,cAAc,IAAa,QAAQ,CACvC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,oBAAC,IAAI,CAAC,kBAAkB,IAAgC,QAAQ,CAAC,CACxG,CAAC;gBACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;SACF;aAAM;YACL,IAAI,IAAI,CAAC,QAAQ,EAAE;;sBACX,KAAK,sBAAG,oBAAC,IAAI,CAAC,cAAc,IAAiB,QAAQ,EAAE,EAAC;gBAC9D,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAC9C;iBAAM;;sBACC,QAAQ,GAAG,oBAAC,IAAI,CAAC,kBAAkB,IAAgC,QAAQ;gBACjF,oBAAC,IAAI,CAAC,cAAc,IAAiB,QAAQ,CAAC;oBAC5C,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC;oBACzD,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC;iBACnE,CAAC,CAAC;aACJ;SACF;KACF;;;;;IAEO,eAAe;;cACf,KAAK,uBAAI,IAAI,CAAC,YAAY,KAAK,QAAQ;cACzC,oBAAC,IAAI,CAAC,cAAc,IAAa,QAAQ,EAAE;cAC3C,mBAAA,oBAAC,IAAI,CAAC,cAAc,IAAiB,QAAQ,EAAE,GAAE,QAAQ,GAAe;QAE5E,KAAK,CAAC,kBAAkB;;;QAAC;YACvB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;SAClC,EAAC,CAAC;KACJ;;;;;;IAEO,SAAS,CAAC,KAAa;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KACtB;;;;;IAEO,oBAAoB;QAC1B,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,aAAa,mBAAM,IAAI,CAAC,kBAAkB,EAAG,CAAC;SACnE;KACF;;;YA5MF,SAAS,SAAC;gBACT,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE,cAAc;gBACxB,+OAA8C;gBAC9C,IAAI,EAAE;oBACJ,yBAAyB,EAAE,MAAM;iBAClC;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU;;;wBAAC,MAAM,qBAAqB,EAAC;wBACpD,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;;YA7BQ,mBAAmB;YAb1B,MAAM;YAHN,UAAU;;;2BA+CT,KAAK;6BACL,KAAK;wBACL,KAAK;4BACL,KAAK;wBACL,KAAK;6BAEL,KAAK;kCAIL,MAAM;;AARkBC;IAAf,YAAY,EAAE;;wDAAmB;AAClBA;IAAf,YAAY,EAAE;;4DAAuB;;;IAH/C,6CAA+C;;IAC/C,+CAA6B;;IAC7B,0CAA2C;;IAC3C,8CAA+C;;IAC/C,0CAAsC;;IAMtC,oDAAmF;;IAEnF,mDAA4C;;;;;IAE5C,mCAAiC;;;;;IACjC,yCAAuC;;;;;IACvC,wCAAsC;;;;;IACtC,8CAAoE;;;;;IACpE,+CAA8C;;;;;IAC9C,sCAAmB;;;;;IACnB,yCAAyB;;;;;IAEb,oDAAgD;;;;;IAAE,uCAAsB;;;;;;;MC7DzE,kBAAkB;;;YAL9B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;gBACrC,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;gBACnD,OAAO,EAAE,CAAC,qBAAqB,CAAC;aACjC;;;;;;;;;;;;;;;"}